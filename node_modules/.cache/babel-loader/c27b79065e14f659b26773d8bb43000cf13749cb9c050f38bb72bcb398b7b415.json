{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avani\\\\OneDrive\\\\Desktop\\\\React\\\\TextUtils\\\\src\\\\Components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n//react Harry playlist7\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    let new_text = text.toUpperCase();\n    setText(new_text);\n    props.showAlert(\"Converted into UpperCase\", 'Success');\n  };\n  const handleLoClick = () => {\n    let lo_text = text.toLowerCase();\n    setText(lo_text);\n  };\n  const handleClearClick = () => {\n    let new_text = \"\";\n    setText(new_text);\n  };\n  const capitalizeWords = str => {\n    return str.split(\" \") // Split the string into an array of words\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1) // Capitalize first letter of each word\n    ).join(\" \"); // Join the words back into a single string\n  };\n\n  // Handle button click to capitalize words\n  const handleFcapClick = () => {\n    setText(capitalizeWords(text));\n  };\n\n  // Handle text area input change\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n  const [text, setText] = useState(''); //he sangtai basically ki jo input aahe toh text madhe store hotoi and output in setText\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      style: {\n        color: props.mode === `light` ? `black` : `white`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: props.heading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            value: text,\n            onChange: handleOnChange,\n            style: {\n              backgroundColor: props.mode === `dark` ? `grey` : `white`,\n              color: props.mode === `light` ? `black` : `white`\n            },\n            id: \"myBox\",\n            rows: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success mx-2\",\n          onClick: handleUpClick,\n          children: \"Convert to UpperCase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success mx-2\",\n          onClick: handleLoClick,\n          children: \"Convert to LowerCase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success mx-2\",\n          onClick: handleFcapClick,\n          children: \"Convert to First Letters Capital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success mx-2\",\n          onClick: handleClearClick,\n          children: \"Clear text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      style: {\n        color: props.mode === `light` ? `black` : `white`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").length, \" words,\", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time in minutes to read this text is\", 0.008 * text.split(\" \").length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Enter something to preview here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"Kt/yo4ZcRlSRxcmAcKAou8CnBS0=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","new_text","text","toUpperCase","setText","showAlert","handleLoClick","lo_text","toLowerCase","handleClearClick","capitalizeWords","str","split","map","word","charAt","slice","join","handleFcapClick","handleOnChange","event","target","value","children","className","style","color","mode","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","backgroundColor","id","rows","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/avani/OneDrive/Desktop/React/TextUtils/src/Components/TextForm.js"],"sourcesContent":["import React,{useState} from 'react'\r\n\r\n//react Harry playlist7\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () =>{\r\n    let new_text=text.toUpperCase();\r\n    setText(new_text)\r\n    props.showAlert(\"Converted into UpperCase\",'Success')\r\n  }\r\n  const handleLoClick = () =>{\r\n    let lo_text=text.toLowerCase();\r\n    setText(lo_text)\r\n  }\r\n  const handleClearClick = () =>{\r\n    let new_text=\"\";\r\n    setText(new_text)\r\n  }\r\n  const capitalizeWords = (str) => {\r\n    return str\r\n      .split(\" \") // Split the string into an array of words\r\n      .map(\r\n        (word) =>\r\n          word.charAt(0).toUpperCase() + word.slice(1) // Capitalize first letter of each word\r\n      )\r\n      .join(\" \"); // Join the words back into a single string\r\n  };\r\n\r\n  // Handle button click to capitalize words\r\n  const handleFcapClick = () => {\r\n    setText(capitalizeWords(text));\r\n  };\r\n\r\n  // Handle text area input change\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const[text,setText]=useState('');//he sangtai basically ki jo input aahe toh text madhe store hotoi and output in setText\r\n  return (\r\n    <>\r\n    <div className=\"container my-3\" style={{color:props.mode===`light`?`black`:`white`}}>\r\n       <div>\r\n          <h1>{props.heading}</h1>\r\n          <div className=\"mb-3\">\r\n              <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode===`dark`?`grey`:`white`,color: props.mode===`light`?`black`:`white`}}  id=\"myBox\" rows=\"8\"></textarea>\r\n          </div>\r\n          <button className=\"btn btn-success mx-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n          <button className=\"btn btn-success mx-2\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n          <button className=\"btn btn-success mx-2\" onClick={handleFcapClick}>Convert to First Letters Capital</button>\r\n          <button className=\"btn btn-success mx-2\" onClick={handleClearClick}>Clear text</button>\r\n          \r\n       </div>\r\n</div>\r\n<div className=\"container my-3\"style={{color:props.mode===`light`?`black`:`white`}}>\r\n<h2>Your text summary</h2>\r\n<p>{text.split(\" \").length} words,{text.length} characters</p>\r\n<p>Time in minutes to read this text is{0.008 * text.split(\" \").length}</p>\r\n<h2>Preview</h2>\r\n<p>{text.length>0?text:\"Enter something to preview here\"}</p>\r\n</div>\r\n</>\r\n  ) \r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}