{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avani\\\\OneDrive\\\\Desktop\\\\React\\\\my-portfolio\\\\src\\\\Components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    console.log(\"Uppercase was clicked\" + text);\n    let new_text = text.toUpperCase();\n    setText(new_text);\n  };\n  const handleOnChange = event => {\n    console.log(\"On Change\");\n    setText(event.target.value);\n  };\n  const [text, setText] = useState('Enter Text Here:'); //he sangtai basically ki jo input aahe toh text madhe store hotoi and output in setText\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleUpClick,\n        children: \"Convert to UpperCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(TextForm, \"0VeLers0mYnpFL0HPI4rrjOk4MQ=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextForm","props","_s","handleUpClick","console","log","text","new_text","toUpperCase","setText","handleOnChange","event","target","value","className","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","onClick","_c","$RefreshReg$"],"sources":["C:/Users/avani/OneDrive/Desktop/React/my-portfolio/src/Components/TextForm.js"],"sourcesContent":["import React,{useState} from 'react'\r\n\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () =>{\r\n    console.log(\"Uppercase was clicked\" + text);\r\n    let new_text=text.toUpperCase();\r\n    setText(new_text)\r\n  }\r\n  const handleOnChange = (event) =>{\r\n    console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  }\r\n  const[text,setText]=useState('Enter Text Here:');//he sangtai basically ki jo input aahe toh text madhe store hotoi and output in setText\r\n  return (\r\n    <div className=\"container my-3\">\r\n       <div>\r\n          <h1>{props.heading}</h1>\r\n          <div className=\"mb-3\">\r\n              <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n          </div>\r\n          <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n       </div>\r\n</div>\r\n  ) \r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKpC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtC,MAAMC,aAAa,GAAGA,CAAA,KAAK;IACzBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGC,IAAI,CAAC;IAC3C,IAAIC,QAAQ,GAACD,IAAI,CAACE,WAAW,CAAC,CAAC;IAC/BC,OAAO,CAACF,QAAQ,CAAC;EACnB,CAAC;EACD,MAAMG,cAAc,GAAIC,KAAK,IAAI;IAC/BP,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBI,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EACD,MAAK,CAACP,IAAI,EAACG,OAAO,CAAC,GAACZ,QAAQ,CAAC,kBAAkB,CAAC,CAAC;EACjD,oBACEE,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC5BhB,OAAA;MAAAgB,QAAA,gBACGhB,OAAA;QAAAgB,QAAA,EAAKd,KAAK,CAACe;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBrB,OAAA;QAAKe,SAAS,EAAC,MAAM;QAAAC,QAAA,eACjBhB,OAAA;UAAUe,SAAS,EAAC,cAAc;UAACD,KAAK,EAAEP,IAAK;UAACe,QAAQ,EAAEX,cAAe;UAACY,EAAE,EAAC,OAAO;UAACC,IAAI,EAAC;QAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxG,CAAC,eACNrB,OAAA;QAAQe,SAAS,EAAC,iBAAiB;QAACU,OAAO,EAAErB,aAAc;QAAAY,QAAA,EAAC;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEN;AAAClB,EAAA,CAtBuBF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}